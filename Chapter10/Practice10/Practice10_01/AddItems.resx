<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IYRIlv8D2P7Nf7VurwEAAAAASUVORK5CYII=
</value>
  </data>
</root>